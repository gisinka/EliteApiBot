name: EliteApiBot Production CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push EliteApiBot
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./EliteApiBot/Dockerfile
          push: true
          tags: gisinka/eliteapibot:latest

      - name: Stop services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd prod
            printf "${{ secrets.ELITEAPIBOT_PASSWORD }}\n" | sudo -S docker-compose -f docker-compose-prod.yml down
            printf "${{ secrets.ELITEAPIBOT_PASSWORD }}\n" | sudo -S docker container prune -f

      - name: Copy docker-compose-prod.yml
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "docker-compose-prod.yml"
          target: "./prod/"

      - name: Run deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd prod
            printf "${{ secrets.ELITEAPIBOT_PASSWORD }}\n" | sudo -S docker pull gisinka/eliteapibot:latest
            printf "${{ secrets.ELITEAPIBOT_PASSWORD }}\n" | sudo -S DISCORD_TOKEN="${{ secrets.DISCORD_TOKEN }}" docker-compose -f docker-compose-prod.yml up -d
            printf "${{ secrets.ELITEAPIBOT_PASSWORD }}\n" | sudo -S docker image prune -a -f